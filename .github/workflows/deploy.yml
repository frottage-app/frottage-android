name: Deploy
on:
  push:
    branches: ['main']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: write

env:
  GITHUB_ACTIONS: true # For tools that might adjust output for GHA
  FORCE_COLOR: 1
  GRADLE_OPTS: -Dorg.gradle.daemon=false # Ensure Gradle daemon is not used
  LC_ALL: en_US.UTF-8 # Recommended for Fastlane
  LANG: en_US.UTF-8   # Recommended for Fastlane

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install devbox
      uses: jetify-com/devbox-install-action@v0.13.0
      with:
        enable-cache: 'true'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build
      run: |
        devbox run -- just apk

    - name: Test
      run: |
        devbox run -- just test

    - name: Lint
      run: |
        devbox run -- just lint


    - name: Expose github environment as shell variables
      # https://stackoverflow.com/a/75789640/793909
      env:
        SECRETS_CONTEXT: ${{ toJson(secrets) }}
        VARS_CONTEXT: ${{ toJson(vars) }}
      run: |
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        to_envs() { jq -r "to_entries[] | \"\(.key)<<$EOF\n\(.value)\n$EOF\n\""; }
        echo "$VARS_CONTEXT" | to_envs >> $GITHUB_ENV
        echo "$SECRETS_CONTEXT" | to_envs >> $GITHUB_ENV

    - name: Prepare Keystore and Play Store Service Account
      run: |
        mkdir -p keys
        printf "%s" "$KEYSTORE_BASE64" | base64 --decode > keys/keystore.jks
        printf "%s" "$PLAY_SERVICE_ACCOUNT_JSON" > keys/play-service-account.json

    - name: Deploy to Play Store with Fastlane
      id: fastlane_deploy
      run: |
        devbox run -- fastlane playstore

    - name: Create and Push Git Tag
      if: success()
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        TAG_NAME="build/${{ steps.fastlane_deploy.outputs.new_version_code }}"
        git tag -a "$TAG_NAME" -m "Frottage achievement unlocked! Version ${{ steps.fastlane_deploy.outputs.new_version_code }} hits the internal track."
        git push origin "$TAG_NAME"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
